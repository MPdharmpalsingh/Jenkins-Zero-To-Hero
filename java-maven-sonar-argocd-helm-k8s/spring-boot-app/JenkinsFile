pipeline {
  agent {
    docker {
      image 'google/cloud-sdk:slim'
      args '--user root'
    }
  }

  environment {
    SONAR_URL = "http://192.168.0.240:9000"
    GIT_USER_NAME = "MPdharmpalsingh"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    APP_DIR = "java-maven-sonar-argocd-helm-k8s/spring-boot-app"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: "https://github.com/${env.GIT_USER_NAME}/${env.GIT_REPO_NAME}.git"
      }
    }

    stage('Build and Test') {
      steps {
        dir("${env.APP_DIR}") {
          sh 'mvn clean package -X'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir("${env.APP_DIR}") {
            sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "mpdharmpalsingh/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        dir("${env.APP_DIR}") {
          script {
            sh "docker build -t ${DOCKER_IMAGE} ."
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage('Deploy to Cloud Run') {
      steps {
        withCredentials([file(credentialsId: 'gcp-service-account', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
          script {
            def serviceName = "spring-boot-cloudrun"
            def region = "us-central1-f"  // adjust as needed
            sh '''
              export PATH=$PATH:/snap/bin
              gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
              gcloud config set project macro-mender-463013-n5
              gcloud config set run/region us-central1-f
              gcloud run deploy spring-boot-cloudrun \
                --image=docker.io/mpdharmpalsingh/ultimate-cicd:${BUILD_NUMBER} \
                --platform=managed --allow-unauthenticated
            '''
          }
        }
      }
    }

  }
}
